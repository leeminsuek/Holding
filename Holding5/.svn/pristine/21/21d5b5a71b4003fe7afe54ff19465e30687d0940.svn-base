package com.brainyx.holding5;

import android.content.Context;
import android.content.Intent;
import android.os.Bundle;
import android.util.Log;

import com.google.android.gcm.GCMBaseIntentService;

public class GCMIntentService extends GCMBaseIntentService {
	private static final String tag = "GCM_TEST";
	public static final String SEND_ID = "95280102841";

	public GCMIntentService(){ this(SEND_ID); }
	
	public GCMIntentService(String senderId) { super(senderId); }

	@Override
	protected void onMessage(final Context context, Intent intent) {
//		Bundle b = intent.getExtras();
		
		
		PushVO pushVo = new PushVO();
//		String isSend = intent.getStringExtra("isSend");
		String copyPost = intent.getStringExtra("copyPost");
		String del = intent.getStringExtra("del");
		int msgNo = intent.getIntExtra("msgNo", 0);
//		String from = intent.getStringExtra("from");
		String sign1 = intent.getStringExtra("sign1");
		String sign2 = intent.getStringExtra("sign2");
		int contentsNo = intent.getIntExtra("contentsNo", 0);
		String receiveId = intent.getStringExtra("receiveId");
		String sendTime = intent.getStringExtra("sendTime");
		int msgType = intent.getIntExtra("msgType", 0);
		int alarmSeq = intent.getIntExtra("alarmSeq", 0);
		
		pushVo.setContentsNo(contentsNo);
		pushVo.setCopyPost(copyPost);
		pushVo.setDel(del);
		pushVo.setSign1(sign1);
		pushVo.setSign2(sign2);
		pushVo.setReceiveId(receiveId);
		pushVo.setSendTime(sendTime);
		pushVo.setMsgType(msgType);
		pushVo.setAlarmSeq(alarmSeq);
		
		GCMPushProc pushProc = new GCMPushProc();
		pushProc.onReceivePushMsg(context,pushVo);
		
	}

	@Override
	protected void onError(Context context, String errorId) {
		Log.d(tag, "onError. errorId : "+errorId);
	}

	@Override
	protected void onRegistered(Context context, String regId) {
		Log.d(tag, "onRegistered. regId : "+regId);
	}

	@Override
	protected void onUnregistered(Context context, String regId) {
		Log.d(tag, "onUnregistered. regId : "+regId);
	}

	@Override
	protected boolean onRecoverableError(Context context, String errorId) {
		Log.d(tag, "onRecoverableError. errorId : "+errorId);
		return super.onRecoverableError(context, errorId);
	}
}